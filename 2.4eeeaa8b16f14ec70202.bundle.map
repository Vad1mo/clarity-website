{"version":3,"sources":["webpack:///2.4eeeaa8b16f14ec70202.chunk.js","webpack:////Users/eudes/IdeaProjects/clarity-website/src/app/get-started/get-started.module.ts","webpack:////Users/eudes/IdeaProjects/clarity-website/src/app/get-started/get-started.component.ts","webpack:////Users/eudes/IdeaProjects/clarity-website/src/app/get-started/get-started.component.html","webpack:////Users/eudes/IdeaProjects/clarity-website/src/pages/get-started.md"],"names":["webpackJsonp","656","module","exports","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__angular_common__","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_2__get_started_component__","__WEBPACK_IMPORTED_MODULE_3__angular_router__","d","GetStartedModule","__decorate","this","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","route","path","component","data","bodyClass","declarations","imports","forChild","providers","764","__WEBPACK_IMPORTED_MODULE_0__angular_core__","GetStartedComponent","NG_MODULE_EXAMPLE","ngModuleExample","selector","template","host","id","[class.content-container]","800","803"],"mappings":"AAAAA,cAAc,EAAE,IAEVC,IACA,SAASC,EAAQC,EAASC,GAEhC,YACqB,IAAIC,GAAgDD,EAAoB,IACpEE,EAA8CF,EAAoB,GAClEG,EAAuDH,EAAoB,KAC3EI,EAAgDJ,EAAoB,IAC9DA,GAAoBK,EAAEN,EAAS,mBAAoB,WAAa,MAAOO,IACtG,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HP,GAAvHQ,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOK,OAAOC,yBAAyBR,EAAQC,GAAOC,CACrH,IAAuB,gBAAZO,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASX,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIS,GAAIZ,EAAWM,OAAS,EAAGM,GAAK,EAAGA,KAAShB,EAAII,EAAWY,MAAIL,GAAKH,EAAI,EAAIR,EAAEW,GAAKH,EAAI,EAAIR,EAAEK,EAAQC,EAAKK,GAAKX,EAAEK,EAAQC,KAASK,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeZ,EAAQC,EAAKK,GAAIA,GAE5DO,EAAcf,MAAQA,KAAKe,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,ICZpGE,IAEFC,KAAM,GACNC,UAAW1B,EAAA,EACX2B,MACEC,UAAW,wBAgBjBzB,EAAA,mBAAAA,MAAgC,MAVhCA,GAAAC,GAACP,EAAAqB,EAAAnB,EAAA,WACC8B,cACE7B,EAAA,GAEF8B,SACEhC,EAAA,aACAG,EAAA,EAAa8B,SAASP,IAExBQ,eDsBMZ,EAAW,yBACZjB,OAOD8B,IACA,SAAStC,EAAQC,EAASC,GAEhC,YACqB,IAAIqC,GAA8CrC,EAAoB,EAC5DA,GAAoBK,EAAEN,EAAS,IAAK,WAAa,MAAOuC,IACvF,IAAI/B,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HP,GAAvHQ,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOK,OAAOC,yBAAyBR,EAAQC,GAAOC,CACrH,IAAuB,gBAAZO,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASX,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIS,GAAIZ,EAAWM,OAAS,EAAGM,GAAK,EAAGA,KAAShB,EAAII,EAAWY,MAAIL,GAAKH,EAAI,EAAIR,EAAEW,GAAKH,EAAI,EAAIR,EAAEK,EAAQC,EAAKK,GAAKX,EAAEK,EAAQC,KAASK,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeZ,EAAQC,EAAKK,GAAIA,GAE5DO,EAAcf,MAAQA,KAAKe,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,IElEpGc,EAAoB,2dA0B1BD,EAAA,WAEE,QAAAA,KAEO9B,KAAAgC,gBAAkBD,EAC3B,MAbAD,GAAA/B,GAACP,EAAAqB,EAAAgB,EAAA,YACCI,SAAU,cACVC,SAAU1C,EAAQ,KAClB2C,MACEC,GAAM,iBACNC,4BAA6B,UF4DzBtB,EAAW,yBACZe,OAODQ,IACA,SAAShD,EAAQC,EAASC,GG9FhCF,EAAAC,QAAA,oDAAAC,EAAA,4uCHoGM+C,IACA,SAASjD,EAAQC,GIrGvBD,EAAAC,QAAA","file":"2.4eeeaa8b16f14ec70202.chunk.js","sourcesContent":["webpackJsonp([2,7],{\n\n/***/ 656:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common__ = __webpack_require__(97);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__get_started_component__ = __webpack_require__(764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__(225);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"GetStartedModule\", function() { return GetStartedModule; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\nvar route = [\n    {\n        path: \"\",\n        component: __WEBPACK_IMPORTED_MODULE_2__get_started_component__[\"a\" /* GetStartedComponent */],\n        data: {\n            bodyClass: \"layout-get-started\"\n        }\n    }\n];\nvar GetStartedModule = (function () {\n    function GetStartedModule() {\n    }\n    GetStartedModule = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"])({\n            declarations: [\n                __WEBPACK_IMPORTED_MODULE_2__get_started_component__[\"a\" /* GetStartedComponent */],\n            ],\n            imports: [\n                __WEBPACK_IMPORTED_MODULE_0__angular_common__[\"CommonModule\"],\n                __WEBPACK_IMPORTED_MODULE_3__angular_router__[\"a\" /* RouterModule */].forChild(route)\n            ],\n            providers: []\n        }), \n        __metadata('design:paramtypes', [])\n    ], GetStartedModule);\n    return GetStartedModule;\n}());\n\n\n/***/ },\n\n/***/ 764:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return GetStartedComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar NG_MODULE_EXAMPLE = \"\\n    import { NgModule } from '@angular/core';\\n    import { BrowserModule } from '@angular/platform-browser';\\n    import { ClarityModule } from 'clarity-angular';\\n    import { AppComponent } from './app.component';\\n    \\n    @NgModule({\\n        imports: [\\n            BrowserModule,\\n            ClarityModule,\\n            ...\\n         ],\\n         declarations: [ AppComponent ],\\n         bootstrap: [ AppComponent ]\\n    })\\n    export class AppModule {    }\\n\";\nvar GetStartedComponent = (function () {\n    function GetStartedComponent() {\n        this.ngModuleExample = NG_MODULE_EXAMPLE;\n    }\n    GetStartedComponent = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"])({\n            selector: 'get-started',\n            template: __webpack_require__(800),\n            host: {\n                \"id\": \"main-container\",\n                \"[class.content-container]\": \"true\"\n            }\n        }), \n        __metadata('design:paramtypes', [])\n    ], GetStartedComponent);\n    return GetStartedComponent;\n}());\n\n\n/***/ },\n\n/***/ 800:\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = \"<main id=\\\"content-area\\\" class=\\\"content-area\\\">\\n  \" + __webpack_require__(803) + \"\\n</main>\\n<nav class=\\\"sidenav\\\">\\n  <section class=\\\"sidenav-content\\\">\\n    <section class=\\\"nav-group\\\">\\n      <label><a class=\\\"nav-link active\\\" routerLink=\\\".\\\" fragment=\\\"introduction\\\">Clarity Design System</a></label>\\n      <label class=\\\"bump-down\\\"><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"howToUse\\\">How to Use Clarity</a></label>\\n      <ul class=\\\"nav-list\\\">\\n        <li><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"sketchTemplate\\\">Using the Sketch Template</a></li>\\n        <li><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"seedProjectClarity\\\">Using a Clarity Seed</a></li>\\n        <li><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"seedProjectAngular\\\">Using an Angular Seed</a></li>\\n      </ul>\\n      <label class=\\\"bump-down\\\"><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"browserSupport\\\">Device &amp; Browser Support</a></label>\\n      <label class=\\\"bump-down\\\"><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"contribute_guidelines\\\">Contributing to Clarity</a></label>\\n      <label class=\\\"bump-down\\\"><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"reportingBugs\\\">Reporting an Issue</a></label>\\n      <label class=\\\"bump-down\\\"><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"attributions\\\">Attributions</a></label>\\n    </section>\\n  </section>\\n</nav>\\n\";\n\n/***/ },\n\n/***/ 803:\n/***/ function(module, exports) {\n\nmodule.exports = \"<h1 id=\\\"introduction\\\">Clarity Design System</h1>\\n<p>Project Clarity is an open source design system that brings together UX guidelines, an HTML/CSS framework, and Angular 2 components. Clarity is for both designers and developers.</p>\\n<p>Clarityâ€™s designs stem from continuous exploration and research. These designs are built into our HTML/CSS components, which can be used any web UI, regardless of the underlying JavaScript framework. Clarity also offers a set of well-designed and implemented data-bound components built on top of Angular 2, one of the most popular JavaScript frameworks in the industry.</p>\\n<h2 id=\\\"howToUse\\\">How to Use Clarity</h2>\\n<p>We offer three approaches for consuming Clarity: UX, UX and UI, and Angular 2.</p>\\n<!--\\nWe offer three approaches for consuming Clarity.\\n\\n### UX\\n\\nConsuming Clarity at the visual specification level works well for quickly styling applications with a modern look and feel.  This limited approach, however, has challenges in staying current with the framework as Clarity evolves.  If you use the UX path, you'll also need a plan to adopt the UI and NG paths.\\n\\n### UX + UI\\n\\nFor products that are not Angular based, we recommend using Clarity's HTML and CCS. This approach makes Clarity updates easier to consume.\\n\\n### Full Clarity (UX + UI + NG)\\n\\nFor the most complete integration with Clarity, consume the framework at the Angular 2 level.\\n\\n-->\\n<h3 id=\\\"sketchTemplate\\\">Using the Clarity Template for Sketch</h3>\\n<p>Jumpstart your project with the <a href=\\\"/assets/images/sketchTemplates/Clarity-Template-0.7.0.sketch\\\" target=\\\"'_blank'\\\">Clarity Sketch template</a>, a library of components versioned alongside other products in Clarityâ€™s ecosystem. To use with the template, install the <a href=\\\"https://github.com/chrismsimpson/Metropolis\\\" target=\\\"'_blank'\\\">open-source Metropolis font</a> by Chris M. Simpson. Clarity uses these font weights: light, regular, semibold, and medium.</p>\\n<h3 id=\\\"seedProjectClarity\\\">Starting With a Clarity Seed Project (Recommended)</h3>\\n<p>For a new project, the best approach is to clone the Clarity seed project and modify it to fit your needs. The seed project is integrated with clarity-ui and clarity-angular, so you donâ€™t need to install Clarity separately.</p>\\n<p></p>\\n<ol class=\\\"list\\\">\\n<li>Clone the seed app:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    git clone https://github.com/vmware/clarity-seed.git\\n    </code>\\n</pre>\\n</li>\\n<li>Install the dependencies:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install\\n    </code>\\n</pre>\\n</li>\\n<li>Run the seed app:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm start\\n    </code>\\n</pre>\\n</li>\\n</ol>\\n<h3 id=\\\"seedProjectAngular\\\">Using an Angular Seed Project</h3>\\n<p>You can build an Angular 2 app, then install Clarity onto your project.</p>\\n<h4>Step 1: Build an Angular 2 App</h4>\\n<p></p>\\n<ol class=\\\"list\\\">\\n<li>Look at the Angular 2 documentation, starting with <a href=\\\"https://angular.io/docs/ts/latest/quickstart.html\\\">the 5 Min Quickstart</a>.</li>\\n<li>Save and modify the example structure and build, or use one of the Angular seeds:\\n<ul class=\\\"list\\\">\\n<li><a href=\\\"https://github.com/angular/angular-cli\\\">https://github.com/angular/angular-cli</a> (in Beta)</li>\\n<li><a href=\\\"https://github.com/mgechev/angular2-seed\\\">https://github.com/mgechev/angular2-seed</a></li>\\n<li><a href=\\\"https://github.com/angular/angular2-seed\\\">https://github.com/angular/angular2-seed</a> </li>\\n<li><a href=\\\"https://github.com/AngularClass/angular2-webpack-starter\\\">https://github.com/AngularClass/angular2-webpack-starter</a></li>\\n</ul>\\n</li>\\n</ol>\\n<h4 id=\\\"installing\\\">Step 2:  Install Clarity</h4>\\n<p>Clarity is published as three separate packages on NPM:</p>\\n<p><a id=\\\"clarity_icons\\\"></a></p>\\n<ul class=\\\"list\\\">\\n<li><b>clarity-icons.</b> Contains the custom element icons.</li>\\n<li><b>clarity-ui.</b> Contains the static styles for building HTML components.</li>\\n<li><b>clarity-angular.</b> Contains the Angular 2 components. This package depends on clarity-ui for styles.\\n</li>\\n</ul>\\n<h5>Step 2a: Install Clarity Icons</h5>\\n<p></p>\\n<ol class=\\\"list\\\">\\n<li>Install the Clarity Icons package through npm:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install clarity-icons --save\\n    </code>\\n</pre>\\n</li>\\n<li>Install the polyfill for Custom Elements:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install @webcomponents/custom-elements@1.0.0-alpha.3 --save\\n    </code>\\n</pre>\\n</li>\\n<li>(Optional) If your application supports IE10, the polyfill requires the MutationObserver shim to work. If your\\napplication does not support IE10, you can skip the following installation:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install mutationobserver-shim@0.3.2 --save\\n    </code>\\n</pre>\\n</li>\\n<li>\\nInclude clarity-icons.min.css and clarity-icons.min.js in your HTML. Because custom-elements.min.js is dependent on the Custom Elements polyfill, you must include it before clarity-icons.min.js. If your app supports IE10, include mutationobserver.min.js before the polyfill:\\n<pre>\\n    <code class=\\\"language-html\\\">\\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/node_modules/clarity-icons/clarity-icons.min.css&quot;&gt;\\n    &lt;script src=&quot;path/to/node_modules/mutationobserver-shim/dist/mutationobserver.min.js&quot;&gt;&lt;/script&gt;\\n    &lt;script src=&quot;path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js&quot;&gt;&lt;/script&gt;\\n    &lt;script src=&quot;path/to/node_modules/clarity-icons/clarity-icons.min.js&quot;&gt;&lt;/script&gt;\\n    </code>\\n</pre>\\nIf your site is built with <a href=\\\"https://github.com/angular/angular-cli\\\">angular-cli</a> you can achieve the above by\\n adding the files to the styles array and scripts array in <code class=\\\"clr-code\\\">angular-cli.json</code>:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    \\\"styles\\\": [\\n             ...\\n             \\\"../node_modules/clarity-icons/clarity-icons.min.css\\\",\\n             ...\\n     ],\\n     \\\"scripts\\\": [\\n         ...\\n         \\\"../node_modules/mutationobserver-shim/dist/mutationobserver.min.js\\\",\\n         \\\"../node_modules/@webcomponents/custom-elements/custom-elements.min.js\\\",\\n         \\\"../node_modules/clarity-icons/clarity-icons.min.js\\\"\\n         ...\\n     ]\\n    </code>\\n</pre>\\n</li>\\n</ol>\\n<h5>Step 2b: Install Clarity UI</h5>\\n<p></p>\\n<ol class=\\\"list\\\">\\n<li>Install Clarity UI package through npm:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install clarity-ui --save\\n    </code>\\n</pre>\\n</li>\\n<li>Include clarity-ui.min.css in your HTML file:\\n<pre>\\n    <code class=\\\"language-html\\\">\\n    &lt;link rel=\\\"stylesheet\\\" href=\\\"path/to/node_modules/clarity-ui/clarity-ui.min.css\\\"&gt;    \\n</code>\\n</pre>\\nIf your site is built with <a href=\\\"https://github.com/angular/angular-cli\\\">angular-cli</a> you can achieve the above by\\nadding the file to the styles array in <code class=\\\"clr-code\\\">angular-cli.json</code>:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    \\\"styles\\\": [\\n         ...\\n         \\\"../node_modules/clarity-ui/clarity-ui.min.css\\\",\\n         ...\\n     ]\\n    </code>\\n</pre>\\n</li>\\n<li>Write your HTML with the Clarity CSS class names and markup.</li>\\n</ol>\\n<h5>Step 2c: Install Clarity Angular</h5>\\n<p></p>\\n<ol class=\\\"list\\\">\\n<li>If you haven't already, complete steps 1 and 2 for installing Clarity UI in the preceding section.\\n</li>\\n<li>Install the clarity-angular package through npm:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install clarity-angular --save\\n    </code>\\n</pre>\\n</li>\\n<li>Install the clarity-angular package through npm:\\n<pre>\\n    <code class=\\\"language-html\\\">\\n    {{ngModuleExample.trim()}}\\n    </code>\\n</pre>\\n</li>\\n</ol>\\n<h4>Step 3: Run Your App</h4>\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm start\\n    </code>\\n</pre>\\n<h2 id=\\\"browserSupport\\\">Device and Browser Support</h2>\\n<p class=\\\"bump-down\\\"><img src=\\\"assets/images/get-started/device_support.png\\\" alt=\\\"Device and Browser Support\\\"></p>\\n<h2 id=\\\"contribute_guidelines\\\">Contributing to Clarity</h2>\\n<p>The Clarity team welcomes contributions from the community.  See our <a href=\\\"https://github.com/vmware/clarity//blob/master/CONTRIBUTING.md\\\" target=\\\"'_blank'\\\">contribution guidelines</a> on GitHub.</p>\\n<h2 id=\\\"reportingBugs\\\">Reporting an Issue</h2>\\n<p>Ongoing work and feature requests are tracked using <a href=\\\"https://github.com/vmware/clarity/issues\\\" target=\\\"'_blank'\\\">GitHub Issues</a>. Please feel free to file an issue.</p>\\n<h2 id=\\\"attributions\\\">Attributions</h2>\\n<p>See the <a href=\\\"https://github.com/vmware/clarity/blob/master/ATTRIBUTION.md\\\" target=\\\"'_blank'\\\">legal attributions</a> for third party software included in Clarity.</p>\\n<div style=\\\"visibility: hidden; height: 80vh;\\\">This is a spacer to force sidenav highlighting on scroll</div>\\n\"\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 2.4eeeaa8b16f14ec70202.chunk.js","import {CommonModule} from \"@angular/common\";\nimport { NgModule } from '@angular/core';\n\nimport { GetStartedComponent } from \"./get-started.component\";\nimport {RouterModule, Routes} from \"@angular/router\";\n\nconst route: Routes = [\n  {\n    path: \"\",\n    component: GetStartedComponent,\n    data: {\n      bodyClass: \"layout-get-started\"\n    }\n  }\n];\n\n\n@NgModule({\n  declarations: [\n    GetStartedComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(route)\n  ],\n  providers: []\n})\nexport class GetStartedModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/eudes/IdeaProjects/clarity-website/~/angular2-template-loader!/Users/eudes/IdeaProjects/clarity-website/src/app/get-started/get-started.module.ts","import { Component } from '@angular/core';\n\nconst NG_MODULE_EXAMPLE = `\n    import { NgModule } from '@angular/core';\n    import { BrowserModule } from '@angular/platform-browser';\n    import { ClarityModule } from 'clarity-angular';\n    import { AppComponent } from './app.component';\n    \n    @NgModule({\n        imports: [\n            BrowserModule,\n            ClarityModule,\n            ...\n         ],\n         declarations: [ AppComponent ],\n         bootstrap: [ AppComponent ]\n    })\n    export class AppModule {    }\n`;\n\n@Component({\n  selector: 'get-started',\n  template: require(\"!html?interpolate!./get-started.component.html\"),\n  host: {\n    \"id\": \"main-container\",\n    \"[class.content-container]\": \"true\"\n  }\n})\nexport class GetStartedComponent {\n\n  constructor() { }\n\n  public ngModuleExample = NG_MODULE_EXAMPLE;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/eudes/IdeaProjects/clarity-website/~/angular2-template-loader!/Users/eudes/IdeaProjects/clarity-website/src/app/get-started/get-started.component.ts","module.exports = \"<main id=\\\"content-area\\\" class=\\\"content-area\\\">\\n  \" + require('!raw-loader!../../../loaders/markdown!../../pages/get-started.md') + \"\\n</main>\\n<nav class=\\\"sidenav\\\">\\n  <section class=\\\"sidenav-content\\\">\\n    <section class=\\\"nav-group\\\">\\n      <label><a class=\\\"nav-link active\\\" routerLink=\\\".\\\" fragment=\\\"introduction\\\">Clarity Design System</a></label>\\n      <label class=\\\"bump-down\\\"><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"howToUse\\\">How to Use Clarity</a></label>\\n      <ul class=\\\"nav-list\\\">\\n        <li><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"sketchTemplate\\\">Using the Sketch Template</a></li>\\n        <li><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"seedProjectClarity\\\">Using a Clarity Seed</a></li>\\n        <li><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"seedProjectAngular\\\">Using an Angular Seed</a></li>\\n      </ul>\\n      <label class=\\\"bump-down\\\"><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"browserSupport\\\">Device &amp; Browser Support</a></label>\\n      <label class=\\\"bump-down\\\"><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"contribute_guidelines\\\">Contributing to Clarity</a></label>\\n      <label class=\\\"bump-down\\\"><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"reportingBugs\\\">Reporting an Issue</a></label>\\n      <label class=\\\"bump-down\\\"><a class=\\\"nav-link\\\" routerLink=\\\".\\\" fragment=\\\"attributions\\\">Attributions</a></label>\\n    </section>\\n  </section>\\n</nav>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eudes/IdeaProjects/clarity-website/~/html-loader?interpolate!/Users/eudes/IdeaProjects/clarity-website/src/app/get-started/get-started.component.html\n// module id = 800\n// module chunks = 2","module.exports = \"<h1 id=\\\"introduction\\\">Clarity Design System</h1>\\n<p>Project Clarity is an open source design system that brings together UX guidelines, an HTML/CSS framework, and Angular 2 components. Clarity is for both designers and developers.</p>\\n<p>Clarityâ€™s designs stem from continuous exploration and research. These designs are built into our HTML/CSS components, which can be used any web UI, regardless of the underlying JavaScript framework. Clarity also offers a set of well-designed and implemented data-bound components built on top of Angular 2, one of the most popular JavaScript frameworks in the industry.</p>\\n<h2 id=\\\"howToUse\\\">How to Use Clarity</h2>\\n<p>We offer three approaches for consuming Clarity: UX, UX and UI, and Angular 2.</p>\\n<!--\\nWe offer three approaches for consuming Clarity.\\n\\n### UX\\n\\nConsuming Clarity at the visual specification level works well for quickly styling applications with a modern look and feel.  This limited approach, however, has challenges in staying current with the framework as Clarity evolves.  If you use the UX path, you'll also need a plan to adopt the UI and NG paths.\\n\\n### UX + UI\\n\\nFor products that are not Angular based, we recommend using Clarity's HTML and CCS. This approach makes Clarity updates easier to consume.\\n\\n### Full Clarity (UX + UI + NG)\\n\\nFor the most complete integration with Clarity, consume the framework at the Angular 2 level.\\n\\n-->\\n<h3 id=\\\"sketchTemplate\\\">Using the Clarity Template for Sketch</h3>\\n<p>Jumpstart your project with the <a href=\\\"/assets/images/sketchTemplates/Clarity-Template-0.7.0.sketch\\\" target=\\\"'_blank'\\\">Clarity Sketch template</a>, a library of components versioned alongside other products in Clarityâ€™s ecosystem. To use with the template, install the <a href=\\\"https://github.com/chrismsimpson/Metropolis\\\" target=\\\"'_blank'\\\">open-source Metropolis font</a> by Chris M. Simpson. Clarity uses these font weights: light, regular, semibold, and medium.</p>\\n<h3 id=\\\"seedProjectClarity\\\">Starting With a Clarity Seed Project (Recommended)</h3>\\n<p>For a new project, the best approach is to clone the Clarity seed project and modify it to fit your needs. The seed project is integrated with clarity-ui and clarity-angular, so you donâ€™t need to install Clarity separately.</p>\\n<p></p>\\n<ol class=\\\"list\\\">\\n<li>Clone the seed app:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    git clone https://github.com/vmware/clarity-seed.git\\n    </code>\\n</pre>\\n</li>\\n<li>Install the dependencies:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install\\n    </code>\\n</pre>\\n</li>\\n<li>Run the seed app:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm start\\n    </code>\\n</pre>\\n</li>\\n</ol>\\n<h3 id=\\\"seedProjectAngular\\\">Using an Angular Seed Project</h3>\\n<p>You can build an Angular 2 app, then install Clarity onto your project.</p>\\n<h4>Step 1: Build an Angular 2 App</h4>\\n<p></p>\\n<ol class=\\\"list\\\">\\n<li>Look at the Angular 2 documentation, starting with <a href=\\\"https://angular.io/docs/ts/latest/quickstart.html\\\">the 5 Min Quickstart</a>.</li>\\n<li>Save and modify the example structure and build, or use one of the Angular seeds:\\n<ul class=\\\"list\\\">\\n<li><a href=\\\"https://github.com/angular/angular-cli\\\">https://github.com/angular/angular-cli</a> (in Beta)</li>\\n<li><a href=\\\"https://github.com/mgechev/angular2-seed\\\">https://github.com/mgechev/angular2-seed</a></li>\\n<li><a href=\\\"https://github.com/angular/angular2-seed\\\">https://github.com/angular/angular2-seed</a> </li>\\n<li><a href=\\\"https://github.com/AngularClass/angular2-webpack-starter\\\">https://github.com/AngularClass/angular2-webpack-starter</a></li>\\n</ul>\\n</li>\\n</ol>\\n<h4 id=\\\"installing\\\">Step 2:  Install Clarity</h4>\\n<p>Clarity is published as three separate packages on NPM:</p>\\n<p><a id=\\\"clarity_icons\\\"></a></p>\\n<ul class=\\\"list\\\">\\n<li><b>clarity-icons.</b> Contains the custom element icons.</li>\\n<li><b>clarity-ui.</b> Contains the static styles for building HTML components.</li>\\n<li><b>clarity-angular.</b> Contains the Angular 2 components. This package depends on clarity-ui for styles.\\n</li>\\n</ul>\\n<h5>Step 2a: Install Clarity Icons</h5>\\n<p></p>\\n<ol class=\\\"list\\\">\\n<li>Install the Clarity Icons package through npm:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install clarity-icons --save\\n    </code>\\n</pre>\\n</li>\\n<li>Install the polyfill for Custom Elements:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install @webcomponents/custom-elements@1.0.0-alpha.3 --save\\n    </code>\\n</pre>\\n</li>\\n<li>(Optional) If your application supports IE10, the polyfill requires the MutationObserver shim to work. If your\\napplication does not support IE10, you can skip the following installation:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install mutationobserver-shim@0.3.2 --save\\n    </code>\\n</pre>\\n</li>\\n<li>\\nInclude clarity-icons.min.css and clarity-icons.min.js in your HTML. Because custom-elements.min.js is dependent on the Custom Elements polyfill, you must include it before clarity-icons.min.js. If your app supports IE10, include mutationobserver.min.js before the polyfill:\\n<pre>\\n    <code class=\\\"language-html\\\">\\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/node_modules/clarity-icons/clarity-icons.min.css&quot;&gt;\\n    &lt;script src=&quot;path/to/node_modules/mutationobserver-shim/dist/mutationobserver.min.js&quot;&gt;&lt;/script&gt;\\n    &lt;script src=&quot;path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js&quot;&gt;&lt;/script&gt;\\n    &lt;script src=&quot;path/to/node_modules/clarity-icons/clarity-icons.min.js&quot;&gt;&lt;/script&gt;\\n    </code>\\n</pre>\\nIf your site is built with <a href=\\\"https://github.com/angular/angular-cli\\\">angular-cli</a> you can achieve the above by\\n adding the files to the styles array and scripts array in <code class=\\\"clr-code\\\">angular-cli.json</code>:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    \\\"styles\\\": [\\n             ...\\n             \\\"../node_modules/clarity-icons/clarity-icons.min.css\\\",\\n             ...\\n     ],\\n     \\\"scripts\\\": [\\n         ...\\n         \\\"../node_modules/mutationobserver-shim/dist/mutationobserver.min.js\\\",\\n         \\\"../node_modules/@webcomponents/custom-elements/custom-elements.min.js\\\",\\n         \\\"../node_modules/clarity-icons/clarity-icons.min.js\\\"\\n         ...\\n     ]\\n    </code>\\n</pre>\\n</li>\\n</ol>\\n<h5>Step 2b: Install Clarity UI</h5>\\n<p></p>\\n<ol class=\\\"list\\\">\\n<li>Install Clarity UI package through npm:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install clarity-ui --save\\n    </code>\\n</pre>\\n</li>\\n<li>Include clarity-ui.min.css in your HTML file:\\n<pre>\\n    <code class=\\\"language-html\\\">\\n    &lt;link rel=\\\"stylesheet\\\" href=\\\"path/to/node_modules/clarity-ui/clarity-ui.min.css\\\"&gt;    \\n</code>\\n</pre>\\nIf your site is built with <a href=\\\"https://github.com/angular/angular-cli\\\">angular-cli</a> you can achieve the above by\\nadding the file to the styles array in <code class=\\\"clr-code\\\">angular-cli.json</code>:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    \\\"styles\\\": [\\n         ...\\n         \\\"../node_modules/clarity-ui/clarity-ui.min.css\\\",\\n         ...\\n     ]\\n    </code>\\n</pre>\\n</li>\\n<li>Write your HTML with the Clarity CSS class names and markup.</li>\\n</ol>\\n<h5>Step 2c: Install Clarity Angular</h5>\\n<p></p>\\n<ol class=\\\"list\\\">\\n<li>If you haven't already, complete steps 1 and 2 for installing Clarity UI in the preceding section.\\n</li>\\n<li>Install the clarity-angular package through npm:\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm install clarity-angular --save\\n    </code>\\n</pre>\\n</li>\\n<li>Install the clarity-angular package through npm:\\n<pre>\\n    <code class=\\\"language-html\\\">\\n    {{ngModuleExample.trim()}}\\n    </code>\\n</pre>\\n</li>\\n</ol>\\n<h4>Step 3: Run Your App</h4>\\n<pre>\\n    <code class=\\\"clr-code\\\">\\n    npm start\\n    </code>\\n</pre>\\n<h2 id=\\\"browserSupport\\\">Device and Browser Support</h2>\\n<p class=\\\"bump-down\\\"><img src=\\\"assets/images/get-started/device_support.png\\\" alt=\\\"Device and Browser Support\\\"></p>\\n<h2 id=\\\"contribute_guidelines\\\">Contributing to Clarity</h2>\\n<p>The Clarity team welcomes contributions from the community.  See our <a href=\\\"https://github.com/vmware/clarity//blob/master/CONTRIBUTING.md\\\" target=\\\"'_blank'\\\">contribution guidelines</a> on GitHub.</p>\\n<h2 id=\\\"reportingBugs\\\">Reporting an Issue</h2>\\n<p>Ongoing work and feature requests are tracked using <a href=\\\"https://github.com/vmware/clarity/issues\\\" target=\\\"'_blank'\\\">GitHub Issues</a>. Please feel free to file an issue.</p>\\n<h2 id=\\\"attributions\\\">Attributions</h2>\\n<p>See the <a href=\\\"https://github.com/vmware/clarity/blob/master/ATTRIBUTION.md\\\" target=\\\"'_blank'\\\">legal attributions</a> for third party software included in Clarity.</p>\\n<div style=\\\"visibility: hidden; height: 80vh;\\\">This is a spacer to force sidenav highlighting on scroll</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eudes/IdeaProjects/clarity-website/~/raw-loader!/Users/eudes/IdeaProjects/clarity-website/loaders/markdown.js!/Users/eudes/IdeaProjects/clarity-website/src/pages/get-started.md\n// module id = 803\n// module chunks = 2"],"sourceRoot":""}